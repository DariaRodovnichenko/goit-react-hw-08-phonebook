{"version":3,"file":"static/js/159.295695d0.chunk.js","mappings":"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","sources":["components/AddContactForm/AddContactForm.styled.js","redux/selectors.js","components/AddContactForm/AddContactForm.js","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.js","components/Filter/Filter.styled.js","components/Filter/Filter.js","pages/Contacts.styled.js","pages/Contacts.js"],"sourcesContent":["import styled, { css } from 'styled-components';\n\nimport {  ErrorMessage, Field } from 'formik';\n\nexport const FormContainer = styled.div`\n  width: 600px;\n  margin: 0 auto;\n  padding: 20px;\n  border: 1px solid #ccc;\n  border-radius: 5px;\n  background-color: transparent;\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\n  position: relative;\n  overflow: auto;\n  margin-bottom: 20px;\n`;\n\nexport const StyledField = styled(Field)`\n  width: 90%;\n  padding: 10px;\n  border: 1px solid #ccc;\n  border-radius: 5px;\n  font-size: 16px;\n  font-weight: normal;\n  margin-bottom: 4px;\n\n  ${props =>\n    props.hasError &&\n    css`\n      border: 6px solid gold;\n    `}\n\n  &:focus {\n    outline: none;\n    border-color: #007bff;\n  }\n`;\n\nexport const Label = styled.label`\n  display: block;\n  font-size: 20px;\n  font-weight: 600;\n  letter-spacing: 1px;\n  margin-bottom: 10px;\n`;\n\nexport const ErrorMsg = styled(ErrorMessage)`\n  color: white;\n  font-size: 16px;\n  font-weight: bold;\n`;\n\nexport const SubmitBtn = styled.button`\n  background: white;\n  color: #63666a;\n  font-weight: normal;\n  letter-spacing: 1px;\n  padding: 10px;\n  height: 40px;\n  border: rgba(227, 37, 26, 255);\n  border-radius: 5px;\n  box-shadow: 3px 3px 5px 0 rgba(0, 0, 0, 0.5);\n  &:hover {\n    background-color: rgba(227, 37, 26, 255);\n    color: white;\n    transition: background-color 0.3s, color 0.3s;\n  }\n`;\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.items;\nexport const selectFilter = state => state.filter;\nexport const selectError = state => state.contacts.error;\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectFilteredContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    return contacts.filter(({ name }) =>\n      name.toLowerCase().includes(filter.toLowerCase())\n    );\n  }\n);\n","import { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/operations';\n\nimport { Form, Formik } from 'formik';\nimport * as Yup from 'yup';\n\nimport {\n  Label,\n  ErrorMsg,\n  SubmitBtn,\n  StyledField,\n  FormContainer,\n} from './AddContactForm.styled';\nimport toast from 'react-hot-toast';\nimport { selectContacts } from 'redux/selectors';\n\nconst FormSchema = Yup.object().shape({\n  name: Yup.string()\n    .min(3, 'Too Short!')\n    .max(50, 'Too Long!')\n    .required('Required'),\n\n  number: Yup.string().required('Required'),\n});\n\nconst AddContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  const handleFormSubmit = (values, actions) => {\n    const newContact = {\n      name: values.name,\n      number: values.number,\n    };\n\n    if (\n      contacts.length !== 0 &&\n      contacts.find(\n        contact =>\n          contact.name.toLowerCase().trim() === values.name.toLowerCase().trim()\n      )\n    ) {\n      toast.error(`${values.name} is already in contacts`);\n      actions.setSubmitting(false);\n      return;\n    }\n\n    dispatch(addContact(newContact));\n    actions.resetForm();\n  };\n\n  return (\n    <FormContainer>\n      <Formik\n        initialValues={{\n          name: '',\n          number: '',\n        }}\n        validationSchema={FormSchema}\n        onSubmit={handleFormSubmit}\n      >\n        {({ errors, touched }) => (\n          <Form>\n            <Label>\n              <StyledField\n                name=\"name\"\n                type=\"text\"\n                placeholder=\"Name\"\n                hasError={touched.name && errors.name}\n              />\n              <ErrorMsg name=\"name\" component=\"div\" />\n            </Label>\n            <Label>\n              <StyledField\n                name=\"number\"\n                type=\"tel\"\n                placeholder=\"Number\"\n                hasError={touched.number && errors.number}\n              />\n              <ErrorMsg name=\"number\" component=\"div\" />\n            </Label>\n            <SubmitBtn type=\"submit\">Add contact</SubmitBtn>\n          </Form>\n        )}\n      </Formik>\n    </FormContainer>\n  );\n};\n\nexport default AddContactForm;\n","import { FaTrashAlt } from 'react-icons/fa';\nimport styled from 'styled-components';\n\nexport const ListOfContacts = styled.ul`\n  width: 622px;\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n  justify-content: space-between;\n  padding: 10px;\n  margin-bottom: 10px;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n`;\n\nexport const WatchWord = styled.p`\n  color: white;\n`;\n\nexport const ContactItem = styled.li`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  border: 1px solid #ddd;\n  padding: 10px;\n  margin-bottom: 10px;\n`;\n\nexport const ContactInfo = styled.span`\n  font-size: 20px;\n  flex-grow: 1;\n  margin-right: 12px;\n`;\n\nexport const DeleteBtn = styled.button`\n  display: flex;\n  gap: 10px;\n  background-color: #ff4d4d;\n  color: white;\n  border: none;\n  border-radius: 5px;\n  padding: 6px 12px 6px 16px;\n  cursor: pointer;\n  box-shadow: 5px 5px 5px rgba(0.5, 0, 0, 0.3);\n  transition: background-color 0.3s;\n\n  &:hover {\n    background-color: white;\n    color: red;\n    transition: background-color 0.3s;\n    transform: scale(0.9);\n  }\n`;\nexport const TrashIcon = styled(FaTrashAlt)`\n  width: 20px;\n  height: 20px;\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { useEffect } from 'react';\nimport {\n  selectFilteredContacts,\n  selectError,\n  selectIsLoading,\n} from 'redux/selectors';\nimport { Loader } from '../Loader/Loader';\nimport { deleteContact, fetchContacts } from 'redux/operations';\nimport {\n  ContactInfo,\n  ContactItem,\n  DeleteBtn,\n  ListOfContacts,\n  TrashIcon,\n  WatchWord,\n} from './ContactList.styled';\n\nfunction ContactList() {\n  const filteredContacts = useSelector(selectFilteredContacts);\n  const error = useSelector(selectError);\n  const isLoading = useSelector(selectIsLoading);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const handleDelete = id => {\n    dispatch(deleteContact(id)).then(() => {\n      dispatch(fetchContacts());\n    });\n  };\n\n  return (\n    <ListOfContacts>\n      {isLoading && !error ? (\n        <Loader />\n      ) : filteredContacts.length === 0 && !error ? (\n        <WatchWord>The Phonebook is empty 🫤. Add your first contact.</WatchWord>\n      ) : (\n        filteredContacts.map(({ id, name, number }) => (\n          <ContactItem key={id}>\n            <ContactInfo>{name + ': ' + number}</ContactInfo>\n            <DeleteBtn\n              type=\"button\"\n              name=\"deleteBtn\"\n              onClick={() => handleDelete(id)}\n            >\n              <TrashIcon />\n              Delete\n            </DeleteBtn>\n          </ContactItem>\n        ))\n      )}\n    </ListOfContacts>\n  );\n}\n\nexport default ContactList;\n","import styled from 'styled-components';\n\nexport const FilterTitle = styled.h3`\n  font-size: 30px;\n  font-weight: bold;\n  color: white;\n  margin-bottom: 20px;\n`;\n\nexport const FilterInput = styled.input`\n  font-size: 14px;\n  width: 620px;\n  padding: 10px;\n  margin-bottom: 20px;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n`;\n\nexport const FilterLabel = styled.label`\n  margin-top: 8px;\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { selectContacts, selectFilter } from 'redux/selectors';\nimport { setFilter } from 'redux/filterSlice';\nimport { FilterInput, FilterTitle } from './Filter.styled';\n\nfunction Filter() {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectFilter);\n\n  const onChange = event => {\n    dispatch(setFilter(event.target.value.trim()));\n  };\n\n  return useSelector(selectContacts).length < 1 ? (\n    <FilterTitle>Add your first contact</FilterTitle>\n  ) : (\n    <FilterInput\n      type=\"text\"\n      name=\"filter\"\n      placeholder=\"Search by name\"\n      value={filter}\n      onChange={onChange}\n    />\n  );\n}\n\nexport default Filter;\n","import styled from 'styled-components';\n\nexport const Title = styled.h2`\n  font-size: 32px;\n  font-weight: bold;\n  color: white;\n  margin-bottom: 10px;\n`;\n","import AddContactForm from 'components/AddContactForm/AddContactForm';\nimport ContactList from 'components/ContactList/ContactList';\nimport Filter from 'components/Filter/Filter';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useEffect } from 'react';\nimport { fetchContacts } from 'redux/operations';\nimport { selectIsLoading } from 'redux/selectors';\nimport { Loader } from 'components/Loader/Loader';\nimport { Title } from './Contacts.styled';\n\nfunction Contacts() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <AddContactForm /> {}\n      <div>{isLoading && <Loader />}</div> {}\n      <Title>Contacts</Title>\n      <Filter />\n      <ContactList /> {}\n    </>\n  );\n}\n\nexport default Contacts;\n"],"names":["FormContainer","styled","_templateObject","_taggedTemplateLiteral","StyledField","Field","_templateObject2","props","hasError","css","_templateObject3","Label","_templateObject4","ErrorMsg","ErrorMessage","_templateObject5","SubmitBtn","_templateObject6","selectContacts","state","contacts","items","selectFilter","filter","selectError","error","selectIsLoading","isLoading","selectFilteredContacts","createSelector","_ref","name","toLowerCase","includes","FormSchema","Yup","shape","min","max","required","number","dispatch","useDispatch","useSelector","_jsx","children","Formik","initialValues","validationSchema","onSubmit","values","actions","newContact","length","find","contact","trim","toast","concat","setSubmitting","addContact","resetForm","errors","touched","_jsxs","Form","type","placeholder","component","ListOfContacts","WatchWord","ContactItem","ContactInfo","DeleteBtn","TrashIcon","FaTrashAlt","filteredContacts","useEffect","fetchContacts","Loader","map","id","onClick","deleteContact","then","handleDelete","FilterTitle","FilterInput","value","onChange","event","setFilter","target","Title","_Fragment","AddContactForm","Filter","ContactList"],"sourceRoot":""}