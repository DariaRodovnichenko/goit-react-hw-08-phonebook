{"version":3,"file":"static/js/854.bdf7a994.chunk.js","mappings":"+PAGaA,EAAoBC,EAAAA,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,sNAY9BC,EAAYH,EAAAA,GAAAA,IAAUI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,kCAItBG,EAAcL,EAAAA,GAAAA,MAAYM,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,sHAQ1BK,GAAgBP,EAAAA,EAAAA,IAAOQ,EAAAA,GAAPR,CAAaS,IAAAA,GAAAP,EAAAA,EAAAA,GAAA,sOAe7BQ,GAASV,EAAAA,EAAAA,IAAOW,EAAAA,GAAPX,CAAoBY,IAAAA,GAAAV,EAAAA,EAAAA,GAAA,qEAM7BW,EAAcb,EAAAA,GAAAA,OAAac,IAAAA,GAAAZ,EAAAA,EAAAA,GAAA,2W,SC2DxC,EA/FqB,WACnB,IAAMa,GAAWC,EAAAA,EAAAA,MA0CjB,OACEC,EAAAA,EAAAA,KAAClB,EAAiB,CAAAmB,UAChBD,EAAAA,EAAAA,KAACE,EAAAA,GAAM,CAACC,cA1CU,CACpBC,KAAM,GACNC,MAAO,GACPC,SAAU,IAuC8BC,SApCrB,SAAAC,GACnBV,GAASW,EAAAA,EAAAA,IAASD,GACpB,EAkCiEP,UAC3DS,EAAAA,EAAAA,MAACC,EAAAA,GAAI,CAAAV,SAAA,EACHS,EAAAA,EAAAA,MAACxB,EAAS,CAAAe,SAAA,EACRD,EAAAA,EAAAA,KAACZ,EAAW,CAACwB,QAAQ,OAAMX,SAAC,cAC5BD,EAAAA,EAAAA,KAACV,EAAa,CACZuB,KAAK,OACLC,GAAG,OACHV,KAAK,OACLW,YAAY,kBACZC,SAAU,SAAAC,GACR,OAAKA,EAGE,KAFE,UAGX,KAEFjB,EAAAA,EAAAA,KAACP,EAAM,CAACW,KAAK,OAAOc,UAAU,MAAMC,UAAU,cAGhDT,EAAAA,EAAAA,MAACxB,EAAS,CAAAe,SAAA,EACRD,EAAAA,EAAAA,KAACZ,EAAW,CAACwB,QAAQ,QAAOX,SAAC,WAC7BD,EAAAA,EAAAA,KAACV,EAAa,CACZuB,KAAK,QACLC,GAAG,QACHV,KAAK,QACLW,YAAY,2BACZC,SA3CY,SAAAC,GACtB,IAAKA,EACH,MAAO,WAMT,MAFE,uEAEcG,KAAKH,GAId,KAHE,sBAIX,KAgCUjB,EAAAA,EAAAA,KAACP,EAAM,CAACW,KAAK,QAAQc,UAAU,YAGjCR,EAAAA,EAAAA,MAACxB,EAAS,CAAAe,SAAA,EACRD,EAAAA,EAAAA,KAACZ,EAAW,CAACwB,QAAQ,WAAUX,SAAC,cAChCD,EAAAA,EAAAA,KAACV,EAAa,CACZuB,KAAK,WACLC,GAAG,WACHV,KAAK,WACLW,YAAY,sBACZC,SAtEe,SAAAC,GACzB,IAAKA,EACH,MAAO,WAMT,MAFE,oEAEiBG,KAAKH,GAIjB,KAHE,6HAIX,KA2DUjB,EAAAA,EAAAA,KAACP,EAAM,CAACW,KAAK,WAAWc,UAAU,YAGpClB,EAAAA,EAAAA,KAACJ,EAAW,CAACiB,KAAK,SAAQZ,SAAC,mBAKrC,ECrGe,SAASoB,IACtB,OACErB,EAAAA,EAAAA,KAACsB,EAAAA,GAAc,CAAArB,UACbS,EAAAA,EAAAA,MAAA,OAAAT,SAAA,EACED,EAAAA,EAAAA,KAACuB,EAAAA,GAAM,CAAAtB,UACLD,EAAAA,EAAAA,KAAA,SAAAC,SAAO,oBAETD,EAAAA,EAAAA,KAACwB,EAAY,QAIrB,C","sources":["components/RegisterForm/RegisterForm.styled.js","components/RegisterForm/RegisterForm.js","pages/Register.js"],"sourcesContent":["import { ErrorMessage, Field } from 'formik';\nimport styled from 'styled-components';\n\nexport const RegisterContainer = styled.div`\n  width: 600px;\n  max-height: 400px;\n  margin: 0 auto;\n  padding: 20px;\n  border: 1px solid #ccc;\n  border-radius: 5px;\n  background-color: transparent;\n  position: relative;\n  overflow: hidden;\n`;\n\nexport const FormField = styled.div`\n  margin-bottom: 20px;\n`;\n\nexport const RegisterLbl = styled.label`\n  display: block;\n  font-size: 20px;\n  font-weight: 600;\n  letter-spacing: 1px;\n  margin-bottom: 10px;\n`;\n\nexport const RegisterInput = styled(Field)`\n  width: 90%;\n  height: 22px;\n  padding: 10px;\n  border: 1px solid #ccc;\n  border-radius: 5px;\n  font-size: 16px;\n  margin-bottom: 4px;\n  transition: border 0.3s;\n\n  &:hover {\n    border: 8px solid gold;\n  }\n`;\n\nexport const ErrMsg = styled(ErrorMessage)`\n  color: white;\n  font-size: 16px;\n  font-weight: bold;\n`;\n\nexport const RegisterBtn = styled.button`\n  background: white;\n  color: #63666a;\n  font-weight: bold;\n  letter-spacing: 1px;\n  padding: 10px 20px;\n  border: rgba(227, 37, 26, 255);\n  border-radius: 5px;\n  box-shadow: 3px 3px 5px 0 rgba(0, 0, 0, 0.5);\n  &:hover {\n    background-color: rgba(227, 37, 26, 255);\n    color: white;\n    transition: background-color 0.3s, color 0.3s;\n  }\n`;\n","import { useDispatch } from 'react-redux';\nimport { register } from 'redux/authentication/authOperations';\nimport { Form, Formik } from 'formik';\nimport {\n  ErrMsg,\n  FormField,\n  RegisterBtn,\n  RegisterContainer,\n  RegisterInput,\n  RegisterLbl,\n} from './RegisterForm.styled';\n\nconst RegisterForm = () => {\n  const dispatch = useDispatch();\n\n  const initialValues = {\n    name: '',\n    email: '',\n    password: '',\n  };\n\n  const handleSubmit = values => {\n    dispatch(register(values));\n  };\n\n  const passwordValidation = value => {\n    if (!value) {\n      return 'Required';\n    }\n\n    const passwordRegex =\n      /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]+$/;\n\n    if (!passwordRegex.test(value)) {\n      return 'Password must contain at least one lowercase letter, one uppercase letter, one number, and one symbol (@, $, !, %, *, ?, &)';\n    }\n\n    return null;\n  };\n\n  const emailValidation = value => {\n    if (!value) {\n      return 'Required';\n    }\n\n    const emailRegex =\n      /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/;\n\n    if (!emailRegex.test(value)) {\n      return 'Invalid email format';\n    }\n\n    return null;\n  };\n\n  return (\n    <RegisterContainer>\n      <Formik initialValues={initialValues} onSubmit={handleSubmit}>\n        <Form>\n          <FormField>\n            <RegisterLbl htmlFor=\"name\">Username</RegisterLbl>\n            <RegisterInput\n              type=\"text\"\n              id=\"name\"\n              name=\"name\"\n              placeholder=\"Enter your name\"\n              validate={value => {\n                if (!value) {\n                  return 'Required';\n                }\n                return null;\n              }}\n            />\n            <ErrMsg name=\"name\" component=\"div\" className=\"error\" />\n          </FormField>\n\n          <FormField>\n            <RegisterLbl htmlFor=\"email\">Email</RegisterLbl>\n            <RegisterInput\n              type=\"email\"\n              id=\"email\"\n              name=\"email\"\n              placeholder=\"Enter your email address\"\n              validate={emailValidation}\n            />\n            <ErrMsg name=\"email\" component=\"div\" />\n          </FormField>\n\n          <FormField>\n            <RegisterLbl htmlFor=\"password\">Password</RegisterLbl>\n            <RegisterInput\n              type=\"password\"\n              id=\"password\"\n              name=\"password\"\n              placeholder=\"Enter your password\"\n              validate={passwordValidation}\n            />\n            <ErrMsg name=\"password\" component=\"div\" />\n          </FormField>\n\n          <RegisterBtn type=\"submit\">Register</RegisterBtn>\n        </Form>\n      </Formik>\n    </RegisterContainer>\n  );\n};\n\nexport default RegisterForm;\n","import { Helmet, HelmetProvider } from 'react-helmet-async';\n\nimport RegisterForm from 'components/RegisterForm/RegisterForm';\n\nexport default function Register() {\n  return (\n    <HelmetProvider>\n      <div>\n        <Helmet>\n          <title>Registration</title>\n        </Helmet>\n        <RegisterForm />\n      </div>\n    </HelmetProvider>\n  );\n}\n"],"names":["RegisterContainer","styled","_templateObject","_taggedTemplateLiteral","FormField","_templateObject2","RegisterLbl","_templateObject3","RegisterInput","Field","_templateObject4","ErrMsg","ErrorMessage","_templateObject5","RegisterBtn","_templateObject6","dispatch","useDispatch","_jsx","children","Formik","initialValues","name","email","password","onSubmit","values","register","_jsxs","Form","htmlFor","type","id","placeholder","validate","value","component","className","test","Register","HelmetProvider","Helmet","RegisterForm"],"sourceRoot":""}